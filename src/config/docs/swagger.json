{
  "openapi": "3.0.0",
  "info": {
    "title": "User Management API",
    "version": "1.0.0",
    "description": "API documentation for the User Management system."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "number", "example": 1 },
          "name": { "type": "string", "example": "John Doe" },
          "email": { "type": "string", "example": "johndoe@example.com" },
          "isVerified": { "type": "boolean", "example": false },
          "login_count": { "type": "number", "example": 5 },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "example": "2024-04-17T12:34:56Z"
          }
        }
      },
      "RegisterUser": {
        "type": "object",
        "required": ["name", "email", "password", "isAdmin"],
        "properties": {
          "name": { "type": "string", "example": "John Doe" },
          "email": { "type": "string", "example": "johndoe@example.com" },
          "password": { "type": "string", "example": "secret123" },
          "isAdmin": { "type": "boolean", "example": false }
        }
      },
      "LoginUser": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": { "type": "string", "example": "johndoe@example.com" },
          "password": { "type": "string", "example": "secret123" }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Jane Doe" },
          "email": { "type": "string", "example": "janedoe@example.com" }
        }
      },
      "PasswordResetRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": { "type": "string", "example": "user@example.com" }
        }
      },
      "PasswordReset": {
        "type": "object",
        "required": ["token", "newPassword"],
        "properties": {
          "token": { "type": "string", "example": "abcdef123456" },
          "newPassword": { "type": "string", "example": "newSecret123" }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user.",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterUser" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "400": { "description": "Validation error." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login a user.",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginUser" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "token": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "400": { "description": "Validation error or invalid credentials." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/api/auth/verify": {
      "get": {
        "summary": "Verify a user's email.",
        "tags": ["Auth"],
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": { "type": "string" },
            "description": "The email address of the user to verify."
          }
        ],
        "responses": {
          "200": {
            "description": "Verification status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isVerified": { "type": "boolean" }
                  }
                }
              }
            }
          },
          "400": { "description": "Invalid email query parameter." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "summary": "Retrieve a list of users with optional filters.",
        "tags": ["Admin"],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": { "type": "string" },
            "description": "Filter users by name."
          },
          {
            "in": "query",
            "name": "email",
            "schema": { "type": "string" },
            "description": "Filter users by email."
          },
          {
            "in": "query",
            "name": "isVerified",
            "schema": { "type": "boolean" },
            "description": "Filter users by verification status."
          },
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer" },
            "description": "Page number for pagination."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer" },
            "description": "Number of users per page."
          },
          {
            "in": "query",
            "name": "start_date",
            "schema": { "type": "string" },
            "description": "Start date for filtering by registration date (format: YYYY-MM-DD)"
          },
          {
            "in": "query",
            "name": "end_date",
            "schema": { "type": "string" },
            "description": "End date for filtering by registration date (format: YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/api/admin/stats/total-users": {
      "get": {
        "summary": "Retrieve the total number of registered users.",
        "tags": ["Admin"],
        "responses": {
          "200": {
            "description": "Total number of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "totalUsers": { "type": "integer" } }
                }
              }
            }
          },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/api/admin/stats/verified-users": {
      "get": {
        "summary": "Retrieve the total number of verified users.",
        "tags": ["Admin"],
        "responses": {
          "200": {
            "description": "Total number of verified users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "verifiedUsers": { "type": "integer" } }
                }
              }
            }
          },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/api/admin/stats/top-users": {
      "get": {
        "summary": "Retrieve the top 3 users by login frequency.",
        "tags": ["Admin"],
        "responses": {
          "200": {
            "description": "A list of the top 3 users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/api/admin/stats/inactive-users": {
      "get": {
        "summary": "Retrieve users who have never logged in (inactive users).",
        "tags": ["Admin"],
        "responses": {
          "200": {
            "description": "A list of inactive users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/api/password-reset/request": {
      "post": {
        "summary": "Request a password reset token.",
        "tags": ["Password Reset"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PasswordResetRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset token generated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "token": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": { "description": "Bad request. Email is missing or invalid." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/api/password-reset/reset": {
      "post": {
        "summary": "Reset the password using the provided token.",
        "tags": ["Password Reset"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PasswordReset" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been reset successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "message": { "type": "string" } }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Token or new password is missing or invalid."
          },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Retrieve user details by ID.",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the user to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "The user data.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "404": { "description": "User not found." },
          "500": { "description": "Internal server error." }
        }
      },
      "put": {
        "summary": "Update a user's details.",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the user to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUser" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "message": { "type": "string" } }
                }
              }
            }
          },
          "404": { "description": "User not found." },
          "500": { "description": "Internal server error." }
        }
      },
      "delete": {
        "summary": "Delete a user by ID.",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "integer" },
            "description": "The ID of the user to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "message": { "type": "string" } }
                }
              }
            }
          },
          "404": { "description": "User not found." },
          "500": { "description": "Internal server error." }
        }
      }
    }
  }
}
